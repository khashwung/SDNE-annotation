[Graph_Data]        
train_graph_file = GraphData/flickr.txt

;uncomment this if you want to check link prediction
;origin_graph_file = GraphData/flickr.mat

;uncomment this if you want to check classification 
;label_file = GraphData/blogCatalog3-groups.txt

[Output]
;display the performance in every 5 epochs
display = 5
embedding_filename = flickr

;the K for precision@k
check_reconstruction = 10,100,500,1000,10000

;uncomment this if you want to check link prediction
;check_link_prediction = 10,100,500,1000,10000

;uncomment this if you want to check classification 
;check_classification = yes

[Model_Setup]
;you can restore the model from an old one.
restore_model = ./result/flickr_old.model

;the struct of the network, the -1 will be replaced with N automatically.
struct = -1,100

;the loss func is  // gamma * L1 + alpha * L2 + reg * regularTerm //
alpha = 100
gamma = 1
reg = 1

;the weight balanced value to reconstruct non-zero element more.
beta = 50
        
batch_size = 16
epochs_limit = 100
learning_rate = 0.01

dbn_init = True
dbn_epochs = 500
dbn_batch_size = 64
dbn_learning_rate = 0.1

;negative sample ratio 
;if you want to do negative sampling, you should load data from txt file instead of mat file.
ng_sample_ratio = 0.0

